plugins {
    id 'java'
    id 'application'
}

dependencies {
    implementation project(':bolt-schema')

    implementation "com.lmax:disruptor:${versions.disruptor}"
    implementation "io.aeron:aeron-driver:${versions.aeron}"
    implementation "io.aeron:aeron-client:${versions.aeron}"
    
    // Prometheus 监控
    implementation "io.prometheus:simpleclient:${versions.prometheus}"

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

application {
    mainClass = 'com.cmex.bolt.Bolt'
}

// 常规测试任务 - 排除性能测试标签
test {
    useJUnitPlatform {
        excludeTags 'performance'
    }
    
}

tasks.register('performance', Test) {
    group = 'performance'

    useJUnitPlatform {
        includeTags 'performance'
    }

    // 高性能测试的专用JVM配置 - 优化版
    jvmArgs = [
            // 内存配置
            '-Xmx8g',                    // 增加堆内存到6GB
            '-Xms8g',                    // 预分配堆内存
            '-XX:MaxDirectMemorySize=12g', // 增加直接内存
            
            // GC优化 - 使用G1GC
            '-XX:+UseG1GC',              // 使用G1垃圾收集器
            '-XX:MaxGCPauseMillis=10',   // 最大GC暂停10ms
            '-XX:G1HeapRegionSize=16m',  // G1区域大小
            '-XX:+UseStringDeduplication', // 字符串去重
            
            // JIT编译优化
            '-XX:+TieredCompilation',    // 启用分层编译
            '-XX:TieredStopAtLevel=4',   // 最高编译级别
            '-XX:+UseCompressedOops',    // 压缩指针
            '-XX:+UseCompressedClassPointers',
            
            // 性能调优
            '-XX:+UseLargePages',        // 使用大页内存
            '-XX:LargePageSizeInBytes=2m',
            
            // 并发优化
            '-XX:+UseThreadPriorities',  // 线程优先级
            
            '-XX:+PrintGC',              // 打印GC信息
            '-XX:+PrintGCDetails',       // 详细GC信息
            '-Xloggc:gc.log',            // GC日志文件
            
    ]

    // 设置测试超时（性能测试需要更长时间）
    systemProperty 'junit.jupiter.execution.timeout.default', '600s'

}

tasks.register('fatJar', Jar) {
    archiveFileName = 'bolt-spot-all-in-one.jar'
    manifest {
        attributes 'Main-Class': 'com.cmex.bolt.spot.SpotServer'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}